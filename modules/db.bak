# /modules/db.py

import mysql.connector
import logging
from config import DB_CONFIG

logger = logging.getLogger('my_application.db')

class Database:
    def __init__(self):
        self.connection = mysql.connector.connect(**DB_CONFIG)
        self.cursor = self.connection.cursor()

    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.close()

    def close(self):
        if self.cursor:
            self.cursor.close()
        if self.connection:
            self.connection.close()

    def close_connection(self):
        """Explicitly close the database connection."""
        if hasattr(self, 'connection') and self.connection:
            self.connection.close()

    def save_time_settings(self, roll_up_time, roll_down_time):
        """Save the roll up and roll down times."""
        try:
            query = "INSERT INTO time_settings (roll_up_time, roll_down_time) VALUES (%s, %s)"
            values = (roll_up_time, roll_down_time)
            self.cursor.execute(query, values)
            self.connection.commit()
        except mysql.connector.Error as err:
            print(f"Error: {err}")

    def get_latest_time_settings(self):
        """Retrieve the latest roll up and roll down times."""
        try:
            query = "SELECT roll_up_time, roll_down_time FROM time_settings ORDER BY id DESC LIMIT 1"
            self.cursor.execute(query)
            return self.cursor.fetchone()
        except mysql.connector.Error as err:
            print(f"Error: {err}")
            return None

    def get_roll_up_time(self):
        try:
            sql = "SELECT roll_up_time FROM time_settings ORDER BY id DESC LIMIT 1"
            self.cursor.execute(sql)
            result = self.cursor.fetchone()
            return result[0] if result else None
        except mysql.connector.Error as err:
            print(f"Error: {err}")
            return None

    def get_roll_down_time(self):
        try:
            sql = "SELECT roll_down_time FROM time_settings ORDER BY id DESC LIMIT 1"
            self.cursor.execute(sql)
            result = self.cursor.fetchone()
            return result[0] if result else None
        except mysql.connector.Error as err:
            print(f"Error: {err}")
            return None
